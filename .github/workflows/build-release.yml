name: Build Tarball

on:
  push:
    paths:
      - 'src/**'
      - 'package.json'
      - '.github/workflows/build-release.yml'
      - 'packages/**'
      - '.yarn*'

# Ensure only one workflow runs at a time per branch, canceling in-progress jobs
concurrency:
  group: build-release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-pack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          repository: dimaslanjaka/proxies-grabber
          submodules: recursive
          token: '${{ secrets.GITHUB_TOKEN }}'

      - name: Init cache
        uses: actions/cache@v4
        with:
          path: |
            **/dist/
            **/tmp/
            **/.cache/
            **/node_modules/
            **/yarn.lock
            **/package-lock.json
            **/pnpm-lock.yaml
          key: ${{ runner.os }}-build-${{ hashFiles('**/yarn.lock', '**/package-lock.json', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Setup GitHub
        run: |
          git config --local user.email "dimaslanjaka@gmail.com"
          git config --local user.name "dimaslanjaka"

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'yarn'
          cache-dependency-path: '**/package.json'

      - name: Install Global Dependencies
        run: npm i -g npm gulp-cli typescript ts-node

      - name: Install dependencies
        run: |
          yarn install || (echo "Install failed, retrying with clean install..." && rm -rf node_modules yarn.lock && touch yarn.lock && yarn install)

      - name: Build
        run: |
          yarn build || (echo "Build failed, retrying after clean install..." && rm -rf node_modules yarn.lock && touch yarn.lock && yarn install && yarn build)

      - name: Pack
        run: yarn run pack

      - name: Check for changes in release/
        id: git_status
        run: |
          git add -N release/
          if [ $(git status --porcelain release | wc -l) -gt "0" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Add release/ if changed
        if: steps.git_status.outputs.changed == 'true'
        run: git add release/

      - name: Commit if release/ changed
        if: steps.git_status.outputs.changed == 'true'
        run: |
          LATEST_HASH=$(git rev-parse HEAD)
          echo "chore(release): update release assets for https://github.com/${{ github.repository }}/commit/$LATEST_HASH" > commit-msg.txt
          git commit -F commit-msg.txt

      - name: Push changes
        if: steps.git_status.outputs.changed == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git push
